//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace Maxsys.VisualLAL
{
	/// <summary>
	/// DomainRelationship SimboloTemNocoes
	/// Cada símbolo tem uma ou mais noções.
	/// </summary>
	[DslDesign::DisplayNameResource("Maxsys.VisualLAL.SimboloTemNocoes.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Maxsys.VisualLAL.SimboloTemNocoes.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Maxsys.VisualLAL.VisualLALDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("94e5eeac-029c-4eda-a3e9-31acd980eac8")]
	public partial class SimboloTemNocoes : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// SimboloTemNocoes domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x94e5eeac, 0x029c, 0x4eda, 0xa3, 0xe9, 0x31, 0xac, 0xd9, 0x80, 0xea, 0xc8);
	
				
		/// <summary>
		/// Constructor
		/// Creates a SimboloTemNocoes link in the same Partition as the given Simbolo
		/// </summary>
		/// <param name="source">Simbolo to use as the source of the relationship.</param>
		/// <param name="target">Nocao to use as the target of the relationship.</param>
		public SimboloTemNocoes(Simbolo source, Nocao target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(SimboloTemNocoes.SimboloDomainRoleId, source), new DslModeling::RoleAssignment(SimboloTemNocoes.NocaoDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public SimboloTemNocoes(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public SimboloTemNocoes(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public SimboloTemNocoes(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public SimboloTemNocoes(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Simbolo domain role code
		
		/// <summary>
		/// Simbolo domain role Id.
		/// </summary>
		public static readonly global::System.Guid SimboloDomainRoleId = new global::System.Guid(0x55eafc5a, 0xbac3, 0x4cda, 0x9c, 0x60, 0x7b, 0xf4, 0xaa, 0x51, 0xdf, 0x4d);
		
		/// <summary>
		/// DomainRole Simbolo
		/// Noções que o símbolo possui
		/// </summary>
		[DslDesign::DisplayNameResource("Maxsys.VisualLAL.SimboloTemNocoes/Simbolo.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Maxsys.VisualLAL.SimboloTemNocoes/Simbolo.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Nocoes", PropertyDisplayNameKey="Maxsys.VisualLAL.SimboloTemNocoes/Simbolo.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("55eafc5a-bac3-4cda-9c60-7bf4aa51df4d")]
		public virtual Simbolo Simbolo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Simbolo)DslModeling::DomainRoleInfo.GetRolePlayer(this, SimboloDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SimboloDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Simbolo of a Nocao
		/// <summary>
		/// Gets Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Simbolo GetSimbolo(Nocao element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, NocaoDomainRoleId) as Simbolo;
		}
		
		/// <summary>
		/// Sets Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetSimbolo(Nocao element, Simbolo newSimbolo)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, NocaoDomainRoleId, newSimbolo);
		}
		#endregion
		#region Nocao domain role code
		
		/// <summary>
		/// Nocao domain role Id.
		/// </summary>
		public static readonly global::System.Guid NocaoDomainRoleId = new global::System.Guid(0x7f268a76, 0xfefa, 0x49bb, 0xb0, 0x31, 0xa4, 0x09, 0xf8, 0x1a, 0x94, 0x9b);
		
		/// <summary>
		/// DomainRole Nocao
		/// Símbolo ao qual pertence a noção.
		/// </summary>
		[DslDesign::DisplayNameResource("Maxsys.VisualLAL.SimboloTemNocoes/Nocao.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Maxsys.VisualLAL.SimboloTemNocoes/Nocao.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Simbolo", PropertyDisplayNameKey="Maxsys.VisualLAL.SimboloTemNocoes/Nocao.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("7f268a76-fefa-49bb-b031-a409f81a949b")]
		public virtual Nocao Nocao
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Nocao)DslModeling::DomainRoleInfo.GetRolePlayer(this, NocaoDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, NocaoDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Nocoes of a Simbolo
		/// <summary>
		/// Gets a list of Nocoes.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Nocao> GetNocoes(Simbolo element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Nocao>, Nocao>(element, SimboloDomainRoleId);
		}
		#endregion
		#region Simbolo link accessor
		/// <summary>
		/// Get the list of SimboloTemNocoes links to a Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Maxsys.VisualLAL.SimboloTemNocoes> GetLinksToNocoes ( global::Maxsys.VisualLAL.Simbolo simboloInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloTemNocoes>(simboloInstance, global::Maxsys.VisualLAL.SimboloTemNocoes.SimboloDomainRoleId);
		}
		#endregion
		#region Nocao link accessor
		/// <summary>
		/// Get the SimboloTemNocoes link to a Nocao.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Maxsys.VisualLAL.SimboloTemNocoes GetLinkToSimbolo (global::Maxsys.VisualLAL.Nocao nocaoInstance)
		{
			global::System.Collections.Generic.IList<global::Maxsys.VisualLAL.SimboloTemNocoes> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloTemNocoes>(nocaoInstance, global::Maxsys.VisualLAL.SimboloTemNocoes.NocaoDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Nocao not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region SimboloTemNocoes instance accessors
		
		/// <summary>
		/// Get any SimboloTemNocoes links between a given Simbolo and a Nocao.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Maxsys.VisualLAL.SimboloTemNocoes> GetLinks( global::Maxsys.VisualLAL.Simbolo source, global::Maxsys.VisualLAL.Nocao target )
		{
			global::System.Collections.Generic.List<global::Maxsys.VisualLAL.SimboloTemNocoes> outLinks = new global::System.Collections.Generic.List<global::Maxsys.VisualLAL.SimboloTemNocoes>();
			global::System.Collections.Generic.IList<global::Maxsys.VisualLAL.SimboloTemNocoes> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloTemNocoes>(source, global::Maxsys.VisualLAL.SimboloTemNocoes.SimboloDomainRoleId);
			foreach ( global::Maxsys.VisualLAL.SimboloTemNocoes link in links )
			{
				if ( target.Equals(link.Nocao) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one SimboloTemNocoes link between a given Simboloand a Nocao.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Maxsys.VisualLAL.SimboloTemNocoes GetLink( global::Maxsys.VisualLAL.Simbolo source, global::Maxsys.VisualLAL.Nocao target )
		{
			global::System.Collections.Generic.IList<global::Maxsys.VisualLAL.SimboloTemNocoes> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloTemNocoes>(source, global::Maxsys.VisualLAL.SimboloTemNocoes.SimboloDomainRoleId);
			foreach ( global::Maxsys.VisualLAL.SimboloTemNocoes link in links )
			{
				if ( target.Equals(link.Nocao) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Maxsys.VisualLAL
{
	/// <summary>
	/// DomainRelationship SimboloTemImpactos
	/// Cada símbolo tem um ou mais Impactos.
	/// </summary>
	[DslDesign::DisplayNameResource("Maxsys.VisualLAL.SimboloTemImpactos.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Maxsys.VisualLAL.SimboloTemImpactos.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Maxsys.VisualLAL.VisualLALDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("24236bf4-9b93-44f3-b5ea-bb350cae46c5")]
	public partial class SimboloTemImpactos : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// SimboloTemImpactos domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x24236bf4, 0x9b93, 0x44f3, 0xb5, 0xea, 0xbb, 0x35, 0x0c, 0xae, 0x46, 0xc5);
	
				
		/// <summary>
		/// Constructor
		/// Creates a SimboloTemImpactos link in the same Partition as the given Simbolo
		/// </summary>
		/// <param name="source">Simbolo to use as the source of the relationship.</param>
		/// <param name="target">Impacto to use as the target of the relationship.</param>
		public SimboloTemImpactos(Simbolo source, Impacto target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(SimboloTemImpactos.SimboloDomainRoleId, source), new DslModeling::RoleAssignment(SimboloTemImpactos.ImpactoDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public SimboloTemImpactos(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public SimboloTemImpactos(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public SimboloTemImpactos(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public SimboloTemImpactos(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Simbolo domain role code
		
		/// <summary>
		/// Simbolo domain role Id.
		/// </summary>
		public static readonly global::System.Guid SimboloDomainRoleId = new global::System.Guid(0x4edd7133, 0xa8c2, 0x4d1e, 0xb7, 0xea, 0x80, 0xec, 0xd3, 0x2c, 0x96, 0x51);
		
		/// <summary>
		/// DomainRole Simbolo
		/// Impactos que o símbolo possui.
		/// </summary>
		[DslDesign::DisplayNameResource("Maxsys.VisualLAL.SimboloTemImpactos/Simbolo.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Maxsys.VisualLAL.SimboloTemImpactos/Simbolo.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Impactos", PropertyDisplayNameKey="Maxsys.VisualLAL.SimboloTemImpactos/Simbolo.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("4edd7133-a8c2-4d1e-b7ea-80ecd32c9651")]
		public virtual Simbolo Simbolo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Simbolo)DslModeling::DomainRoleInfo.GetRolePlayer(this, SimboloDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SimboloDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Simbolo of a Impacto
		/// <summary>
		/// Gets Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Simbolo GetSimbolo(Impacto element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ImpactoDomainRoleId) as Simbolo;
		}
		
		/// <summary>
		/// Sets Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetSimbolo(Impacto element, Simbolo newSimbolo)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ImpactoDomainRoleId, newSimbolo);
		}
		#endregion
		#region Impacto domain role code
		
		/// <summary>
		/// Impacto domain role Id.
		/// </summary>
		public static readonly global::System.Guid ImpactoDomainRoleId = new global::System.Guid(0x68d34e5a, 0x8f19, 0x4b25, 0xaf, 0xd9, 0xf2, 0x4e, 0x9f, 0x95, 0x17, 0xc1);
		
		/// <summary>
		/// DomainRole Impacto
		/// Símbolo ao qual pertence o impacto.
		/// </summary>
		[DslDesign::DisplayNameResource("Maxsys.VisualLAL.SimboloTemImpactos/Impacto.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Maxsys.VisualLAL.SimboloTemImpactos/Impacto.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Simbolo", PropertyDisplayNameKey="Maxsys.VisualLAL.SimboloTemImpactos/Impacto.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("68d34e5a-8f19-4b25-afd9-f24e9f9517c1")]
		public virtual Impacto Impacto
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Impacto)DslModeling::DomainRoleInfo.GetRolePlayer(this, ImpactoDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ImpactoDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Impactos of a Simbolo
		/// <summary>
		/// Gets a list of Impactos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Impacto> GetImpactos(Simbolo element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Impacto>, Impacto>(element, SimboloDomainRoleId);
		}
		#endregion
		#region Simbolo link accessor
		/// <summary>
		/// Get the list of SimboloTemImpactos links to a Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Maxsys.VisualLAL.SimboloTemImpactos> GetLinksToImpactos ( global::Maxsys.VisualLAL.Simbolo simboloInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloTemImpactos>(simboloInstance, global::Maxsys.VisualLAL.SimboloTemImpactos.SimboloDomainRoleId);
		}
		#endregion
		#region Impacto link accessor
		/// <summary>
		/// Get the SimboloTemImpactos link to a Impacto.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Maxsys.VisualLAL.SimboloTemImpactos GetLinkToSimbolo (global::Maxsys.VisualLAL.Impacto impactoInstance)
		{
			global::System.Collections.Generic.IList<global::Maxsys.VisualLAL.SimboloTemImpactos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloTemImpactos>(impactoInstance, global::Maxsys.VisualLAL.SimboloTemImpactos.ImpactoDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Impacto not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region SimboloTemImpactos instance accessors
		
		/// <summary>
		/// Get any SimboloTemImpactos links between a given Simbolo and a Impacto.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Maxsys.VisualLAL.SimboloTemImpactos> GetLinks( global::Maxsys.VisualLAL.Simbolo source, global::Maxsys.VisualLAL.Impacto target )
		{
			global::System.Collections.Generic.List<global::Maxsys.VisualLAL.SimboloTemImpactos> outLinks = new global::System.Collections.Generic.List<global::Maxsys.VisualLAL.SimboloTemImpactos>();
			global::System.Collections.Generic.IList<global::Maxsys.VisualLAL.SimboloTemImpactos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloTemImpactos>(source, global::Maxsys.VisualLAL.SimboloTemImpactos.SimboloDomainRoleId);
			foreach ( global::Maxsys.VisualLAL.SimboloTemImpactos link in links )
			{
				if ( target.Equals(link.Impacto) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one SimboloTemImpactos link between a given Simboloand a Impacto.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Maxsys.VisualLAL.SimboloTemImpactos GetLink( global::Maxsys.VisualLAL.Simbolo source, global::Maxsys.VisualLAL.Impacto target )
		{
			global::System.Collections.Generic.IList<global::Maxsys.VisualLAL.SimboloTemImpactos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloTemImpactos>(source, global::Maxsys.VisualLAL.SimboloTemImpactos.SimboloDomainRoleId);
			foreach ( global::Maxsys.VisualLAL.SimboloTemImpactos link in links )
			{
				if ( target.Equals(link.Impacto) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Maxsys.VisualLAL
{
	/// <summary>
	/// DomainRelationship SimboloTemSinonimos
	/// Cada símbolo pode ter nenhum ou muitos Sinônimos
	/// </summary>
	[DslDesign::DisplayNameResource("Maxsys.VisualLAL.SimboloTemSinonimos.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Maxsys.VisualLAL.SimboloTemSinonimos.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Maxsys.VisualLAL.VisualLALDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("0a7e7d37-d2b8-4574-81c8-1ee14af2d7cc")]
	public partial class SimboloTemSinonimos : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// SimboloTemSinonimos domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0a7e7d37, 0xd2b8, 0x4574, 0x81, 0xc8, 0x1e, 0xe1, 0x4a, 0xf2, 0xd7, 0xcc);
	
				
		/// <summary>
		/// Constructor
		/// Creates a SimboloTemSinonimos link in the same Partition as the given Simbolo
		/// </summary>
		/// <param name="source">Simbolo to use as the source of the relationship.</param>
		/// <param name="target">Sinonimo to use as the target of the relationship.</param>
		public SimboloTemSinonimos(Simbolo source, Sinonimo target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(SimboloTemSinonimos.SimboloDomainRoleId, source), new DslModeling::RoleAssignment(SimboloTemSinonimos.SinonimoDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public SimboloTemSinonimos(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public SimboloTemSinonimos(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public SimboloTemSinonimos(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public SimboloTemSinonimos(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Simbolo domain role code
		
		/// <summary>
		/// Simbolo domain role Id.
		/// </summary>
		public static readonly global::System.Guid SimboloDomainRoleId = new global::System.Guid(0x4e51e05f, 0xb640, 0x49fa, 0x9e, 0x99, 0x13, 0x6b, 0xa6, 0x6a, 0xc4, 0xfe);
		
		/// <summary>
		/// DomainRole Simbolo
		/// Sinônimos que o símbolo possui.
		/// </summary>
		[DslDesign::DisplayNameResource("Maxsys.VisualLAL.SimboloTemSinonimos/Simbolo.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Maxsys.VisualLAL.SimboloTemSinonimos/Simbolo.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Sinonimos", PropertyDisplayNameKey="Maxsys.VisualLAL.SimboloTemSinonimos/Simbolo.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("4e51e05f-b640-49fa-9e99-136ba66ac4fe")]
		public virtual Simbolo Simbolo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Simbolo)DslModeling::DomainRoleInfo.GetRolePlayer(this, SimboloDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SimboloDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Simbolo of a Sinonimo
		/// <summary>
		/// Gets Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Simbolo GetSimbolo(Sinonimo element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, SinonimoDomainRoleId) as Simbolo;
		}
		
		/// <summary>
		/// Sets Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetSimbolo(Sinonimo element, Simbolo newSimbolo)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, SinonimoDomainRoleId, newSimbolo);
		}
		#endregion
		#region Sinonimo domain role code
		
		/// <summary>
		/// Sinonimo domain role Id.
		/// </summary>
		public static readonly global::System.Guid SinonimoDomainRoleId = new global::System.Guid(0x904fd952, 0xe0fb, 0x40b1, 0x88, 0xd4, 0xfa, 0xa8, 0x01, 0x37, 0x5b, 0xd2);
		
		/// <summary>
		/// DomainRole Sinonimo
		/// Símbolo ao qual pertence o sinônimo.
		/// </summary>
		[DslDesign::DisplayNameResource("Maxsys.VisualLAL.SimboloTemSinonimos/Sinonimo.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Maxsys.VisualLAL.SimboloTemSinonimos/Sinonimo.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Simbolo", PropertyDisplayNameKey="Maxsys.VisualLAL.SimboloTemSinonimos/Sinonimo.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroOne)]
		[DslModeling::DomainObjectId("904fd952-e0fb-40b1-88d4-faa801375bd2")]
		public virtual Sinonimo Sinonimo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Sinonimo)DslModeling::DomainRoleInfo.GetRolePlayer(this, SinonimoDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SinonimoDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Sinonimos of a Simbolo
		/// <summary>
		/// Gets a list of Sinonimos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Sinonimo> GetSinonimos(Simbolo element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Sinonimo>, Sinonimo>(element, SimboloDomainRoleId);
		}
		#endregion
		#region Simbolo link accessor
		/// <summary>
		/// Get the list of SimboloTemSinonimos links to a Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Maxsys.VisualLAL.SimboloTemSinonimos> GetLinksToSinonimos ( global::Maxsys.VisualLAL.Simbolo simboloInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloTemSinonimos>(simboloInstance, global::Maxsys.VisualLAL.SimboloTemSinonimos.SimboloDomainRoleId);
		}
		#endregion
		#region Sinonimo link accessor
		/// <summary>
		/// Get the SimboloTemSinonimos link to a Sinonimo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Maxsys.VisualLAL.SimboloTemSinonimos GetLinkToSimbolo (global::Maxsys.VisualLAL.Sinonimo sinonimoInstance)
		{
			global::System.Collections.Generic.IList<global::Maxsys.VisualLAL.SimboloTemSinonimos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloTemSinonimos>(sinonimoInstance, global::Maxsys.VisualLAL.SimboloTemSinonimos.SinonimoDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Sinonimo not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region SimboloTemSinonimos instance accessors
		
		/// <summary>
		/// Get any SimboloTemSinonimos links between a given Simbolo and a Sinonimo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Maxsys.VisualLAL.SimboloTemSinonimos> GetLinks( global::Maxsys.VisualLAL.Simbolo source, global::Maxsys.VisualLAL.Sinonimo target )
		{
			global::System.Collections.Generic.List<global::Maxsys.VisualLAL.SimboloTemSinonimos> outLinks = new global::System.Collections.Generic.List<global::Maxsys.VisualLAL.SimboloTemSinonimos>();
			global::System.Collections.Generic.IList<global::Maxsys.VisualLAL.SimboloTemSinonimos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloTemSinonimos>(source, global::Maxsys.VisualLAL.SimboloTemSinonimos.SimboloDomainRoleId);
			foreach ( global::Maxsys.VisualLAL.SimboloTemSinonimos link in links )
			{
				if ( target.Equals(link.Sinonimo) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one SimboloTemSinonimos link between a given Simboloand a Sinonimo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Maxsys.VisualLAL.SimboloTemSinonimos GetLink( global::Maxsys.VisualLAL.Simbolo source, global::Maxsys.VisualLAL.Sinonimo target )
		{
			global::System.Collections.Generic.IList<global::Maxsys.VisualLAL.SimboloTemSinonimos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloTemSinonimos>(source, global::Maxsys.VisualLAL.SimboloTemSinonimos.SimboloDomainRoleId);
			foreach ( global::Maxsys.VisualLAL.SimboloTemSinonimos link in links )
			{
				if ( target.Equals(link.Sinonimo) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Maxsys.VisualLAL
{
	/// <summary>
	/// DomainRelationship DominioTemSimbolos
	/// Description for Maxsys.VisualLAL.DominioTemSimbolos
	/// </summary>
	[DslDesign::DisplayNameResource("Maxsys.VisualLAL.DominioTemSimbolos.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Maxsys.VisualLAL.DominioTemSimbolos.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Maxsys.VisualLAL.VisualLALDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("0f303d11-c6aa-4da7-bd62-6e3dfacc9cba")]
	public partial class DominioTemSimbolos : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// DominioTemSimbolos domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0f303d11, 0xc6aa, 0x4da7, 0xbd, 0x62, 0x6e, 0x3d, 0xfa, 0xcc, 0x9c, 0xba);
	
				
		/// <summary>
		/// Constructor
		/// Creates a DominioTemSimbolos link in the same Partition as the given LALDominio
		/// </summary>
		/// <param name="source">LALDominio to use as the source of the relationship.</param>
		/// <param name="target">Simbolo to use as the target of the relationship.</param>
		public DominioTemSimbolos(LALDominio source, Simbolo target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(DominioTemSimbolos.LALDominioDomainRoleId, source), new DslModeling::RoleAssignment(DominioTemSimbolos.SimboloDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public DominioTemSimbolos(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public DominioTemSimbolos(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public DominioTemSimbolos(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public DominioTemSimbolos(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region LALDominio domain role code
		
		/// <summary>
		/// LALDominio domain role Id.
		/// </summary>
		public static readonly global::System.Guid LALDominioDomainRoleId = new global::System.Guid(0x581eafb7, 0x5862, 0x42a9, 0xbc, 0x86, 0x03, 0x90, 0x97, 0xc3, 0x7d, 0x52);
		
		/// <summary>
		/// DomainRole LALDominio
		/// Description for Maxsys.VisualLAL.DominioTemSimbolos.LALDominio
		/// </summary>
		[DslDesign::DisplayNameResource("Maxsys.VisualLAL.DominioTemSimbolos/LALDominio.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Maxsys.VisualLAL.DominioTemSimbolos/LALDominio.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Simbolos", PropertyDisplayNameKey="Maxsys.VisualLAL.DominioTemSimbolos/LALDominio.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("581eafb7-5862-42a9-bc86-039097c37d52")]
		public virtual LALDominio LALDominio
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (LALDominio)DslModeling::DomainRoleInfo.GetRolePlayer(this, LALDominioDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, LALDominioDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Dominio of a Simbolo
		/// <summary>
		/// Gets Dominio.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static LALDominio GetDominio(Simbolo element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, SimboloDomainRoleId) as LALDominio;
		}
		
		/// <summary>
		/// Sets Dominio.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetDominio(Simbolo element, LALDominio newLALDominio)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, SimboloDomainRoleId, newLALDominio);
		}
		#endregion
		#region Simbolo domain role code
		
		/// <summary>
		/// Simbolo domain role Id.
		/// </summary>
		public static readonly global::System.Guid SimboloDomainRoleId = new global::System.Guid(0x00292fe2, 0x1a1f, 0x4b66, 0x8a, 0x64, 0x90, 0xbc, 0x51, 0x4e, 0xe3, 0x29);
		
		/// <summary>
		/// DomainRole Simbolo
		/// Description for Maxsys.VisualLAL.DominioTemSimbolos.Simbolo
		/// </summary>
		[DslDesign::DisplayNameResource("Maxsys.VisualLAL.DominioTemSimbolos/Simbolo.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Maxsys.VisualLAL.DominioTemSimbolos/Simbolo.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Dominio", PropertyDisplayNameKey="Maxsys.VisualLAL.DominioTemSimbolos/Simbolo.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("00292fe2-1a1f-4b66-8a64-90bc514ee329")]
		public virtual Simbolo Simbolo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Simbolo)DslModeling::DomainRoleInfo.GetRolePlayer(this, SimboloDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SimboloDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Simbolos of a LALDominio
		/// <summary>
		/// Gets a list of Simbolos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Simbolo> GetSimbolos(LALDominio element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Simbolo>, Simbolo>(element, LALDominioDomainRoleId);
		}
		#endregion
		#region LALDominio link accessor
		/// <summary>
		/// Get the list of DominioTemSimbolos links to a LALDominio.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Maxsys.VisualLAL.DominioTemSimbolos> GetLinksToSimbolos ( global::Maxsys.VisualLAL.LALDominio lALDominioInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.DominioTemSimbolos>(lALDominioInstance, global::Maxsys.VisualLAL.DominioTemSimbolos.LALDominioDomainRoleId);
		}
		#endregion
		#region Simbolo link accessor
		/// <summary>
		/// Get the DominioTemSimbolos link to a Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Maxsys.VisualLAL.DominioTemSimbolos GetLinkToDominio (global::Maxsys.VisualLAL.Simbolo simboloInstance)
		{
			global::System.Collections.Generic.IList<global::Maxsys.VisualLAL.DominioTemSimbolos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.DominioTemSimbolos>(simboloInstance, global::Maxsys.VisualLAL.DominioTemSimbolos.SimboloDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Simbolo not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region DominioTemSimbolos instance accessors
		
		/// <summary>
		/// Get any DominioTemSimbolos links between a given LALDominio and a Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Maxsys.VisualLAL.DominioTemSimbolos> GetLinks( global::Maxsys.VisualLAL.LALDominio source, global::Maxsys.VisualLAL.Simbolo target )
		{
			global::System.Collections.Generic.List<global::Maxsys.VisualLAL.DominioTemSimbolos> outLinks = new global::System.Collections.Generic.List<global::Maxsys.VisualLAL.DominioTemSimbolos>();
			global::System.Collections.Generic.IList<global::Maxsys.VisualLAL.DominioTemSimbolos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.DominioTemSimbolos>(source, global::Maxsys.VisualLAL.DominioTemSimbolos.LALDominioDomainRoleId);
			foreach ( global::Maxsys.VisualLAL.DominioTemSimbolos link in links )
			{
				if ( target.Equals(link.Simbolo) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one DominioTemSimbolos link between a given LALDominioand a Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Maxsys.VisualLAL.DominioTemSimbolos GetLink( global::Maxsys.VisualLAL.LALDominio source, global::Maxsys.VisualLAL.Simbolo target )
		{
			global::System.Collections.Generic.IList<global::Maxsys.VisualLAL.DominioTemSimbolos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.DominioTemSimbolos>(source, global::Maxsys.VisualLAL.DominioTemSimbolos.LALDominioDomainRoleId);
			foreach ( global::Maxsys.VisualLAL.DominioTemSimbolos link in links )
			{
				if ( target.Equals(link.Simbolo) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Maxsys.VisualLAL
{
	/// <summary>
	/// DomainRelationship SimboloReferences
	/// Cada Símbolo está ligado a outro atravês de hyperlinks; Esses hyperlinks estão
	/// nas Noções e/ou Impactos.
	/// </summary>
	[DslDesign::DisplayNameResource("Maxsys.VisualLAL.SimboloReferences.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Maxsys.VisualLAL.SimboloReferences.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Maxsys.VisualLAL.VisualLALDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("5167fe0f-7784-48e4-87a4-d3601b695444")]
	public partial class SimboloReferences : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// SimboloReferences domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x5167fe0f, 0x7784, 0x48e4, 0x87, 0xa4, 0xd3, 0x60, 0x1b, 0x69, 0x54, 0x44);
	
				
		/// <summary>
		/// Constructor
		/// Creates a SimboloReferences link in the same Partition as the given Simbolo
		/// </summary>
		/// <param name="source">Simbolo to use as the source of the relationship.</param>
		/// <param name="target">Simbolo to use as the target of the relationship.</param>
		public SimboloReferences(Simbolo source, Simbolo target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(SimboloReferences.SimboloOrigemDomainRoleId, source), new DslModeling::RoleAssignment(SimboloReferences.SimboloDestinoDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public SimboloReferences(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public SimboloReferences(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public SimboloReferences(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public SimboloReferences(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region SimboloOrigem domain role code
		
		/// <summary>
		/// SimboloOrigem domain role Id.
		/// </summary>
		public static readonly global::System.Guid SimboloOrigemDomainRoleId = new global::System.Guid(0x9ab9aedd, 0xfad6, 0x466d, 0x86, 0xa1, 0x98, 0x1f, 0x3f, 0x0c, 0x65, 0x91);
		
		/// <summary>
		/// DomainRole SimboloOrigem
		/// Símbolos mencionados neste Símbolo.
		/// </summary>
		[DslDesign::DisplayNameResource("Maxsys.VisualLAL.SimboloReferences/SimboloOrigem.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Maxsys.VisualLAL.SimboloReferences/SimboloOrigem.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "ReferenciaSimbolos", PropertyDisplayNameKey="Maxsys.VisualLAL.SimboloReferences/SimboloOrigem.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("9ab9aedd-fad6-466d-86a1-981f3f0c6591")]
		public virtual Simbolo SimboloOrigem
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Simbolo)DslModeling::DomainRoleInfo.GetRolePlayer(this, SimboloOrigemDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SimboloOrigemDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EhRefenciadoPorSimbolos of a Simbolo
		/// <summary>
		/// Gets a list of EhRefenciadoPorSimbolos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Simbolo> GetEhRefenciadoPorSimbolos(Simbolo element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Simbolo>, Simbolo>(element, SimboloDestinoDomainRoleId);
		}
		#endregion
		#region SimboloDestino domain role code
		
		/// <summary>
		/// SimboloDestino domain role Id.
		/// </summary>
		public static readonly global::System.Guid SimboloDestinoDomainRoleId = new global::System.Guid(0x9f6ad877, 0x1d8c, 0x4662, 0x9d, 0xe7, 0xc0, 0xf1, 0x05, 0xbd, 0x91, 0xc6);
		
		/// <summary>
		/// DomainRole SimboloDestino
		/// Símbolos que mencionam este Símbolo
		/// </summary>
		[DslDesign::DisplayNameResource("Maxsys.VisualLAL.SimboloReferences/SimboloDestino.DisplayName", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Maxsys.VisualLAL.SimboloReferences/SimboloDestino.Description", typeof(global::Maxsys.VisualLAL.VisualLALDomainModel), "Maxsys.VisualLAL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "EhRefenciadoPorSimbolos", PropertyDisplayNameKey="Maxsys.VisualLAL.SimboloReferences/SimboloDestino.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("9f6ad877-1d8c-4662-9de7-c0f105bd91c6")]
		public virtual Simbolo SimboloDestino
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Simbolo)DslModeling::DomainRoleInfo.GetRolePlayer(this, SimboloDestinoDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SimboloDestinoDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ReferenciaSimbolos of a Simbolo
		/// <summary>
		/// Gets a list of ReferenciaSimbolos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Simbolo> GetReferenciaSimbolos(Simbolo element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Simbolo>, Simbolo>(element, SimboloOrigemDomainRoleId);
		}
		#endregion
		#region SimboloOrigem link accessor
		/// <summary>
		/// Get the list of SimboloReferences links to a Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Maxsys.VisualLAL.SimboloReferences> GetLinksToReferenciaSimbolos ( global::Maxsys.VisualLAL.Simbolo simboloOrigemInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloReferences>(simboloOrigemInstance, global::Maxsys.VisualLAL.SimboloReferences.SimboloOrigemDomainRoleId);
		}
		#endregion
		#region SimboloDestino link accessor
		/// <summary>
		/// Get the list of SimboloReferences links to a Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Maxsys.VisualLAL.SimboloReferences> GetLinksToEhRefenciadoPorSimbolos ( global::Maxsys.VisualLAL.Simbolo simboloDestinoInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloReferences>(simboloDestinoInstance, global::Maxsys.VisualLAL.SimboloReferences.SimboloDestinoDomainRoleId);
		}
		#endregion
		#region SimboloReferences instance accessors
		
		/// <summary>
		/// Get any SimboloReferences links between a given Simbolo and a Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Maxsys.VisualLAL.SimboloReferences> GetLinks( global::Maxsys.VisualLAL.Simbolo source, global::Maxsys.VisualLAL.Simbolo target )
		{
			global::System.Collections.Generic.List<global::Maxsys.VisualLAL.SimboloReferences> outLinks = new global::System.Collections.Generic.List<global::Maxsys.VisualLAL.SimboloReferences>();
			global::System.Collections.Generic.IList<global::Maxsys.VisualLAL.SimboloReferences> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloReferences>(source, global::Maxsys.VisualLAL.SimboloReferences.SimboloOrigemDomainRoleId);
			foreach ( global::Maxsys.VisualLAL.SimboloReferences link in links )
			{
				if ( target.Equals(link.SimboloDestino) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one SimboloReferences link between a given Simboloand a Simbolo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Maxsys.VisualLAL.SimboloReferences GetLink( global::Maxsys.VisualLAL.Simbolo source, global::Maxsys.VisualLAL.Simbolo target )
		{
			global::System.Collections.Generic.IList<global::Maxsys.VisualLAL.SimboloReferences> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Maxsys.VisualLAL.SimboloReferences>(source, global::Maxsys.VisualLAL.SimboloReferences.SimboloOrigemDomainRoleId);
			foreach ( global::Maxsys.VisualLAL.SimboloReferences link in links )
			{
				if ( target.Equals(link.SimboloDestino) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
